{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque-frontend/src/core/components/filters/filters.js\";\nimport React, { useState } from \"react\";\nimport { Button, Card, CardContent, CardHeader, ButtonGroup, Select } from '@material-ui/core';\nimport FormInput from '../../../core/components/form-input/form-input.component';\nimport FormDate from '../../../core/components/form-input/form-date.component';\nimport FormSelect from '../../../core/components/form-select/form-select.component';\nimport './filters.styles.scss';\nexport default function Filters({\n  filters\n}) {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      dispatch\n    } = this.props;\n    dispatch();\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // setValues({ ...filters, [name]: value })\n\n    setValues(prevFilters => prevFilters.map(filter => {\n      if (filter.name === name) return { ...filter,\n        value: value\n      };\n      return filter;\n    }));\n  };\n\n  const handleChangeDate = (date, filter) => {\n    filter.value = date;\n    setValues({\n      filter\n    });\n  };\n\n  const [values, setValues] = useState(filters);\n  return /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Criar um Cliente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"clienteForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, filters.map(filter => {\n    switch (filter.type) {\n      case 'date':\n        return /*#__PURE__*/React.createElement(FormDate, {\n          key: filter.name,\n          name: filter.name,\n          value: values[filter.value],\n          onChange: date => handleChangeDate(date, filter),\n          label: filter.label,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 24\n          }\n        });\n\n      case 'select':\n        return /*#__PURE__*/React.createElement(FormSelect, {\n          key: filter.name,\n          name: filter.name,\n          value: values[filter.value],\n          onChange: handleChange,\n          label: filter.label,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(FormInput, {\n          key: filter.name,\n          type: filter.type,\n          name: filter.name,\n          value: values[filter.value],\n          onChange: handleChange,\n          label: filter.label,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 24\n          }\n        });\n    }\n  }), /*#__PURE__*/React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Buscar\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"button\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Voltar\")))));\n}","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/core/components/filters/filters.js"],"names":["React","useState","Button","Card","CardContent","CardHeader","ButtonGroup","Select","FormInput","FormDate","FormSelect","Filters","filters","handleSubmit","event","preventDefault","dispatch","props","handleChange","e","name","value","target","setValues","prevFilters","map","filter","handleChangeDate","date","values","type","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,UAApC,EAAgDC,WAAhD,EAA6DC,MAA7D,QAA4E,mBAA5E;AAEA,OAAOC,SAAP,MAAsB,0DAAtB;AACA,OAAOC,QAAP,MAAqB,yDAArB;AACA,OAAOC,UAAP,MAAuB,4DAAvB;AACA,OAAO,uBAAP;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAE3C,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEAD,IAAAA,QAAQ;AACT,GAND;;AAQA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B,CADwB,CAExB;;AAEAC,IAAAA,SAAS,CAACC,WAAW,IAAKA,WAAW,CAACC,GAAZ,CAAiBC,MAAD,IAAY;AACpD,UAAIA,MAAM,CAACN,IAAP,KAAgBA,IAApB,EAA0B,OAAO,EAAE,GAAGM,MAAL;AAAaL,QAAAA,KAAK,EAAEA;AAApB,OAAP;AAC1B,aAAOK,MAAP;AACD,KAHyB,CAAjB,CAAT;AAID,GARD;;AAUA,QAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOF,MAAP,KAAkB;AACzCA,IAAAA,MAAM,CAACL,KAAP,GAAeO,IAAf;AACAL,IAAAA,SAAS,CAAC;AAAEG,MAAAA;AAAF,KAAD,CAAT;AACD,GAHD;;AAKA,QAAM,CAACG,MAAD,EAASN,SAAT,IAAsBtB,QAAQ,CAACW,OAAD,CAApC;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,OAAO,CAACa,GAAR,CAAYC,MAAM,IAAI;AACrB,YAAQA,MAAM,CAACI,IAAf;AACE,WAAK,MAAL;AACE,4BAAO,oBAAC,QAAD;AACL,UAAA,GAAG,EAAEJ,MAAM,CAACN,IADP;AAEL,UAAA,IAAI,EAAEM,MAAM,CAACN,IAFR;AAGL,UAAA,KAAK,EAAES,MAAM,CAACH,MAAM,CAACL,KAAR,CAHR;AAIL,UAAA,QAAQ,EAAEO,IAAI,IAAID,gBAAgB,CAACC,IAAD,EAAOF,MAAP,CAJ7B;AAKL,UAAA,KAAK,EAAEA,MAAM,CAACK,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAOF,WAAK,QAAL;AACE,4BAAO,oBAAC,UAAD;AACL,UAAA,GAAG,EAAEL,MAAM,CAACN,IADP;AAEL,UAAA,IAAI,EAAEM,MAAM,CAACN,IAFR;AAGL,UAAA,KAAK,EAAES,MAAM,CAACH,MAAM,CAACL,KAAR,CAHR;AAIL,UAAA,QAAQ,EAAEH,YAJL;AAKL,UAAA,KAAK,EAAEQ,MAAM,CAACK,KALT;AAML,UAAA,QAAQ,MANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAQF;AACE,4BAAO,oBAAC,SAAD;AACL,UAAA,GAAG,EAAEL,MAAM,CAACN,IADP;AAEL,UAAA,IAAI,EAAEM,MAAM,CAACI,IAFR;AAGL,UAAA,IAAI,EAAEJ,MAAM,CAACN,IAHR;AAIL,UAAA,KAAK,EAAES,MAAM,CAACH,MAAM,CAACL,KAAR,CAJR;AAKL,UAAA,QAAQ,EAAEH,YALL;AAML,UAAA,KAAK,EAAEQ,MAAM,CAACK,KANT;AAOL,UAAA,QAAQ,MAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAnBJ;AA4BD,GA7BA,CAFH,eAkCE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,KAAK,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CAlCF,CADF,CAHF,CADF;AAyDD","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, Card, CardContent, CardHeader, ButtonGroup, Select  } from '@material-ui/core';\n\nimport FormInput from '../../../core/components/form-input/form-input.component';\nimport FormDate from '../../../core/components/form-input/form-date.component';\nimport FormSelect from '../../../core/components/form-select/form-select.component';\nimport './filters.styles.scss';\n\nexport default function Filters({ filters }) {\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const { dispatch } = this.props;\n\n    dispatch();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    // setValues({ ...filters, [name]: value })\n\n    setValues(prevFilters => (prevFilters.map((filter) => {\n      if (filter.name === name) return { ...filter, value: value }\n      return filter;\n    })))\n  }\n\n  const handleChangeDate = (date, filter) => {\n    filter.value = date;\n    setValues({ filter });\n  }\n\n  const [values, setValues] = useState(filters);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader title=\"Criar um Cliente\" />\n\n      <CardContent>\n        <form className='clienteForm' onSubmit={handleSubmit}>\n\n          {filters.map(filter => {\n            switch (filter.type) {\n              case 'date':\n                return <FormDate\n                  key={filter.name}\n                  name={filter.name}\n                  value={values[filter.value]}\n                  onChange={date => handleChangeDate(date, filter)}\n                  label={filter.label} />\n\n              case 'select':\n                return <FormSelect\n                  key={filter.name}\n                  name={filter.name}\n                  value={values[filter.value]}\n                  onChange={handleChange}\n                  label={filter.label}\n                  required />\n\n              default:\n                return <FormInput\n                  key={filter.name}\n                  type={filter.type}\n                  name={filter.name}\n                  value={values[filter.value]}\n                  onChange={handleChange}\n                  label={filter.label}\n                  required />\n            }\n          })\n          }\n\n          <ButtonGroup variant=\"contained\">\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n              Buscar\n            </Button>\n\n            <Button variant=\"contained\" type=\"button\" color=\"secondary\">\n              Cadastrar\n            </Button>\n\n            <Button variant=\"contained\" type=\"button\">\n              Voltar\n            </Button>\n          </ButtonGroup>\n\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}