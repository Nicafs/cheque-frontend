{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque-frontend/src/core/components/table/tableCustom.js\";\nimport React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ptBR } from '@material-ui/core/locale';\nconst theme = createMuiTheme({}, ptBR);\nexport default function TableCustom({\n  data,\n  columns\n}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getValue = (row, field, type) => {\n    switch (type) {\n      case 'date':\n        return row[field].toLocaleDateString();\n\n      case 'numeric':\n        return row[field];\n\n      default:\n        return row[field];\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, columns.map(head => /*#__PURE__*/React.createElement(TableCell, {\n    key: head.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \" \", head.title, \" \")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, data.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, getValue(row, column.field, column.type)))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50],\n    colSpan: 3,\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'registros por página'\n      },\n      native: true\n    },\n    labelRowsPerPage: \"Registros por p\\xE1gina\",\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))))));\n}\n;","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/core/components/table/tableCustom.js"],"names":["React","Table","TableBody","TableCell","TableFooter","TableContainer","TableHead","TableRow","Paper","TablePagination","createMuiTheme","ThemeProvider","ptBR","theme","TableCustom","data","columns","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","getValue","row","field","type","toLocaleDateString","map","head","title","id","column","length","inputProps","native"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ptBR } from '@material-ui/core/locale';\n\nconst theme = createMuiTheme({}, ptBR);\n\nexport default function TableCustom({ data, columns }) {\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getValue = (row, field, type) => {\n    switch(type) {\n      case 'date':\n        return row[field].toLocaleDateString();\n      case 'numeric':\n        return row[field];\n      default:\n        return row[field];\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <TableContainer component={Paper}>\n        <Table className='table'>\n          <TableHead>\n            <TableRow>\n              {columns.map(head => (\n                <TableCell key={head.title}> {head.title} </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row.id}>\n                {columns.map(column => (\n                  <TableCell key={column.field}> \n                    {\n                      getValue(row, column.field, column.type)\n                    }\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                colSpan={3}\n                count={data.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'registros por página' },\n                  native: true,\n                }}\n                labelRowsPerPage=\"Registros por página\"\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </ThemeProvider>\n  );\n};"]},"metadata":{},"sourceType":"module"}