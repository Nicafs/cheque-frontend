{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque/cheque/src/pages/clientes/clientes.component.jsx\";\nimport React from \"react\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport EnhancedTable from '../../components/table/EnchancedTable';\nconst data = [{\n  firstName: \"jane1\",\n  age: 20\n}, {\n  firstName: \"jane2\",\n  age: 20\n}, {\n  firstName: \"jane3\",\n  age: 20\n}, {\n  firstName: \"jane4\",\n  age: 20\n}, {\n  firstName: \"jane5\",\n  age: 20\n}, {\n  firstName: \"jane6\",\n  age: 20\n}, {\n  firstName: \"jane7\",\n  age: 20\n}, {\n  firstName: \"jane8\",\n  age: 20\n}, {\n  firstName: \"jane9\",\n  age: 20\n}, {\n  firstName: \"jane0\",\n  age: 20\n}, {\n  firstName: \"jane11\",\n  age: 20\n}, {\n  firstName: \"jane12\",\n  age: 20\n}, {\n  firstName: \"jane13\",\n  age: 20\n}, {\n  firstName: \"jane14\",\n  age: 20\n}, {\n  firstName: \"jane15\",\n  age: 20\n}, {\n  firstName: \"jane16\",\n  age: 20\n}, {\n  firstName: \"jane17\",\n  age: 20\n}, {\n  firstName: \"jane18\",\n  age: 20\n}, {\n  firstName: \"jane19\",\n  age: 20\n}, {\n  firstName: \"jane20\",\n  age: 20\n}, {\n  firstName: \"jane21\",\n  age: 20\n}, {\n  firstName: \"jane22\",\n  age: 20\n}, {\n  firstName: \"jane23\",\n  age: 20\n}, {\n  firstName: \"jane24\",\n  age: 20\n}, {\n  firstName: \"jane25\",\n  age: 20\n}, {\n  firstName: \"jane26\",\n  age: 20\n}, {\n  firstName: \"jane27\",\n  age: 20\n}, {\n  firstName: \"jane28\",\n  age: 20\n}, {\n  firstName: \"jane29\",\n  age: 20\n}, {\n  firstName: \"jane30\",\n  age: 20\n}, {\n  firstName: \"jane31\",\n  age: 20\n}];\nconst columns = [{\n  Header: \"Name\",\n  accessor: \"firstName\"\n}, {\n  Header: \"Other Info\",\n  accessor: \"age\"\n}];\n\nconst Clientes = () => {\n  const [setData] = React.useState([]);\n  const [skipPageReset, setSkipPageReset] = React.useState(false); // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData(old => old.map((row, index) => {\n      if (index === rowIndex) {\n        return { ...old[rowIndex],\n          [columnId]: value\n        };\n      }\n\n      return row;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Clientes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(EnhancedTable, {\n    columns: columns,\n    data: data,\n    setData: setData,\n    updateMyData: updateMyData,\n    skipPageReset: skipPageReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }));\n};\n\nexport default Clientes;","map":{"version":3,"sources":["/home/geia/git/cheque/cheque/src/pages/clientes/clientes.component.jsx"],"names":["React","CssBaseline","EnhancedTable","data","firstName","age","columns","Header","accessor","Clientes","setData","useState","skipPageReset","setSkipPageReset","updateMyData","rowIndex","columnId","value","old","map","row","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from '../../components/table/EnchancedTable'\n\nconst data = [\n  { firstName: \"jane1\",  age: 20 },\n  { firstName: \"jane2\",  age: 20 },\n  { firstName: \"jane3\",  age: 20 },\n  { firstName: \"jane4\",  age: 20 },\n  { firstName: \"jane5\",  age: 20 },\n  { firstName: \"jane6\",  age: 20 },\n  { firstName: \"jane7\",  age: 20 },\n  { firstName: \"jane8\",  age: 20 },\n  { firstName: \"jane9\",  age: 20 },\n  { firstName: \"jane0\",  age: 20 },\n  { firstName: \"jane11\",  age: 20 },\n  { firstName: \"jane12\",  age: 20 },\n  { firstName: \"jane13\",  age: 20 },\n  { firstName: \"jane14\",  age: 20 },\n  { firstName: \"jane15\",  age: 20 },\n  { firstName: \"jane16\",  age: 20 },\n  { firstName: \"jane17\",  age: 20 },\n  { firstName: \"jane18\",  age: 20 },\n  { firstName: \"jane19\",  age: 20 },\n  { firstName: \"jane20\",  age: 20 },\n  { firstName: \"jane21\",  age: 20 },\n  { firstName: \"jane22\",  age: 20 },\n  { firstName: \"jane23\",  age: 20 },\n  { firstName: \"jane24\",  age: 20 },\n  { firstName: \"jane25\",  age: 20 },\n  { firstName: \"jane26\",  age: 20 },\n  { firstName: \"jane27\",  age: 20 },\n  { firstName: \"jane28\",  age: 20 },\n  { firstName: \"jane29\",  age: 20 },\n  { firstName: \"jane30\",  age: 20 },\n  { firstName: \"jane31\",  age: 20 },\n];\n\nconst columns = [\n  {\n    Header: \"Name\",\n    accessor: \"firstName\"\n  },\n  {\n    Header: \"Other Info\",\n    accessor: \"age\"\n  }\n];\n\nconst Clientes = () => {\n\nconst [setData] = React.useState([]);\nconst [skipPageReset, setSkipPageReset] = React.useState(false);\n\n// When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true)\n    setData(old =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          }\n        }\n        return row\n      })\n    )\n  }\n\n  return (\n    <div className=\"Clientes\">\n    <CssBaseline />\n     <EnhancedTable\n        columns={columns}\n        data={data}\n        setData={setData}\n        updateMyData={updateMyData}\n        skipPageReset={skipPageReset}\n      />\n    </div>\n  );\n}\n\nexport default Clientes;"]},"metadata":{},"sourceType":"module"}