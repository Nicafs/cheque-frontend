{"ast":null,"code":"import { clientTypes } from './client.types';\nimport axios from '../axios';\nexport const findById = id => dispatch => {\n  axios.get(`/client/` & {\n    id\n  }).then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_GET,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const find = () => dispatch => {\n  axios.get('/client').then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_GET_ALL,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const update = (formData, token) => dispatch => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  axios.put('/client', formData, config).then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_UPDATE,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const create = (formData, token) => dispatch => {\n  console.log(\"Executando o create dos actions do client\");\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  console.log(\"Executando o create dos actions do client\");\n  axios.post('/clients', formData, config).then(payload => {\n    console.log(\"Resposta do axios:\", payload);\n    return dispatch({\n      type: clientTypes.CLIENT_CREATE,\n      payload\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/geia/git/cheque/src/redux/client/client.actions.js"],"names":["clientTypes","axios","findById","id","dispatch","get","then","payload","type","CLIENT_GET","catch","err","console","log","find","CLIENT_GET_ALL","update","formData","token","config","headers","put","CLIENT_UPDATE","create","post","CLIENT_CREATE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AACxCH,EAAAA,KAAK,CAACI,GAAN,CAAW,UAAD,GAAW;AAACF,IAAAA;AAAD,GAArB,EACGG,IADH,CACQC,OAAO,IAAI;AAEf,WAAOH,QAAQ,CAAC;AACdI,MAAAA,IAAI,EAAER,WAAW,CAACS,UADJ;AAEdF,MAAAA;AAFc,KAAD,CAAf;AAKD,GARH,EASGG,KATH,CASSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAThB;AAUD,CAXM;AAaP,OAAO,MAAMG,IAAI,GAAG,MAAMV,QAAQ,IAAI;AAClCH,EAAAA,KAAK,CAACI,GAAN,CAAU,SAAV,EACGC,IADH,CACQC,OAAO,IAAI;AAEf,WAAOH,QAAQ,CAAC;AACdI,MAAAA,IAAI,EAAER,WAAW,CAACe,cADJ;AAEdR,MAAAA;AAFc,KAAD,CAAf;AAKD,GARH,EASGG,KATH,CASSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAThB;AAUD,CAXI;AAaP,OAAO,MAAMK,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqBd,QAAQ,IAAI;AACrD,QAAMe,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,uBAAiBF;AADV;AADI,GAAf;AAMAjB,EAAAA,KAAK,CAACoB,GAAN,CAAU,SAAV,EAAqBJ,QAArB,EAA+BE,MAA/B,EACCb,IADD,CACMC,OAAO,IAAI;AAEf,WAAOH,QAAQ,CAAC;AACdI,MAAAA,IAAI,EAAER,WAAW,CAACsB,aADJ;AAEdf,MAAAA;AAFc,KAAD,CAAf;AAKD,GARD,EASCG,KATD,CASOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATd;AAUD,CAjBM;AAmBP,OAAO,MAAMY,MAAM,GAAG,CAACN,QAAD,EAAWC,KAAX,KAAqBd,QAAQ,IAAI;AACrDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACE,QAAMM,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,uBAAiBF;AADZ;AADE,GAAf;AAKAN,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAEAZ,EAAAA,KAAK,CAACuB,IAAN,CAAW,UAAX,EAAuBP,QAAvB,EAAiCE,MAAjC,EACCb,IADD,CACMC,OAAO,IAAI;AAEfK,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCN,OAAlC;AACF,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAER,WAAW,CAACyB,aADN;AAEZlB,MAAAA;AAFY,KAAD,CAAf;AAKC,GATD,EAUCG,KAVD,CAUOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVd;AAWH,CApBM","sourcesContent":["import { clientTypes } from './client.types';\n\nimport axios from '../axios';\n\nexport const findById = id => dispatch => {\n  axios.get(`/client/`&{id})\n    .then(payload => {\n     \n      return dispatch({\n        type: clientTypes.CLIENT_GET,\n        payload,\n      });\n\n    })\n    .catch(err => console.log(err));\n}\n\nexport const find = () => dispatch => {\n    axios.get('/client')\n      .then(payload => {\n       \n        return dispatch({\n          type: clientTypes.CLIENT_GET_ALL,\n          payload,\n        });\n  \n      })\n      .catch(err => console.log(err));\n  }\n\nexport const update = (formData, token) => dispatch => {\n  const config = {\n    headers: {\n      'Authorization': token,\n    }\n  };\n\n  axios.put('/client', formData, config)\n  .then(payload => {\n\n    return dispatch({\n      type: clientTypes.CLIENT_UPDATE,\n      payload,\n    });\n\n  })\n  .catch(err => console.log(err)); \n}\n\nexport const create = (formData, token) => dispatch => {\n  console.log(\"Executando o create dos actions do client\");\n    const config = {\n        headers: {\n            'Authorization': token,\n        }\n    };\n    console.log(\"Executando o create dos actions do client\");\n\n    axios.post('/clients', formData, config)\n    .then(payload => {\n\n      console.log(\"Resposta do axios:\", payload);\n    return dispatch({\n        type: clientTypes.CLIENT_CREATE,\n        payload,\n    });\n\n    })\n    .catch(err => console.log(err)); \n}"]},"metadata":{},"sourceType":"module"}