{"ast":null,"code":"import { clientTypes } from './client.types';\nimport axios from '../axios';\nexport const findById = id => dispatch => {\n  axios.get(`/client/` & {\n    id\n  }).then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_GET,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const find = () => dispatch => {\n  axios.get('/clients').then(response => {\n    dispatch({\n      type: clientTypes.CLIENT_GET_ALL,\n      data: response.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const update = (formData, token) => dispatch => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  axios.put('/client', formData, config).then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_UPDATE,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const create = (formData, token) => dispatch => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  axios.post('/clients', formData, config).then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_CREATE,\n      payload\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/redux/client/client.actions.js"],"names":["clientTypes","axios","findById","id","dispatch","get","then","payload","type","CLIENT_GET","catch","err","console","log","find","response","CLIENT_GET_ALL","data","update","formData","token","config","headers","put","CLIENT_UPDATE","create","post","CLIENT_CREATE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AACxCH,EAAAA,KAAK,CAACI,GAAN,CAAW,UAAD,GAAW;AAACF,IAAAA;AAAD,GAArB,EACGG,IADH,CACQC,OAAO,IAAI;AAEf,WAAOH,QAAQ,CAAC;AACdI,MAAAA,IAAI,EAAER,WAAW,CAACS,UADJ;AAEdF,MAAAA;AAFc,KAAD,CAAf;AAKD,GARH,EASGG,KATH,CASSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAThB;AAUD,CAXM;AAaP,OAAO,MAAMG,IAAI,GAAG,MAAMV,QAAQ,IAAI;AACpCH,EAAAA,KAAK,CAACI,GAAN,CAAU,UAAV,EACGC,IADH,CACSS,QAAD,IAAY;AACdX,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,WAAW,CAACgB,cADX;AAEPC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFR,KAAD,CAAR;AAIH,GANH,EAMKP,KANL,CAMYC,GAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GARH;AASC,CAVI;AAaP,OAAO,MAAMO,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqBhB,QAAQ,IAAI;AACrD,QAAMiB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,uBAAiBF;AADV;AADI,GAAf;AAMAnB,EAAAA,KAAK,CAACsB,GAAN,CAAU,SAAV,EAAqBJ,QAArB,EAA+BE,MAA/B,EACCf,IADD,CACMC,OAAO,IAAI;AAEf,WAAOH,QAAQ,CAAC;AACdI,MAAAA,IAAI,EAAER,WAAW,CAACwB,aADJ;AAEdjB,MAAAA;AAFc,KAAD,CAAf;AAKD,GARD,EASCG,KATD,CASOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATd;AAUD,CAjBM;AAmBP,OAAO,MAAMc,MAAM,GAAG,CAACN,QAAD,EAAWC,KAAX,KAAqBhB,QAAQ,IAAI;AACnD,QAAMiB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,uBAAiBF;AADZ;AADE,GAAf;AAMAnB,EAAAA,KAAK,CAACyB,IAAN,CAAW,UAAX,EAAuBP,QAAvB,EAAiCE,MAAjC,EACCf,IADD,CACMC,OAAO,IAAI;AAEjB,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAER,WAAW,CAAC2B,aADN;AAEZpB,MAAAA;AAFY,KAAD,CAAf;AAKC,GARD,EASCG,KATD,CASOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATd;AAUH,CAjBM","sourcesContent":["import { clientTypes } from './client.types';\n\nimport axios from '../axios';\n\nexport const findById = id => dispatch => {\n  axios.get(`/client/`&{id})\n    .then(payload => {\n     \n      return dispatch({\n        type: clientTypes.CLIENT_GET,\n        payload,\n      });\n\n    })\n    .catch(err => console.log(err));\n}\n\nexport const find = () => dispatch => {\n  axios.get('/clients')\n    .then((response)=>{\n        dispatch({\n          type: clientTypes.CLIENT_GET_ALL,\n          data: response.data,\n        });\n    }).catch((err)=>{\n        console.log(err);\n    })\n  }\n\n\nexport const update = (formData, token) => dispatch => {\n  const config = {\n    headers: {\n      'Authorization': token,\n    }\n  };\n\n  axios.put('/client', formData, config)\n  .then(payload => {\n\n    return dispatch({\n      type: clientTypes.CLIENT_UPDATE,\n      payload,\n    });\n\n  })\n  .catch(err => console.log(err)); \n}\n\nexport const create = (formData, token) => dispatch => {\n    const config = {\n        headers: {\n            'Authorization': token,\n        }\n    };\n\n    axios.post('/clients', formData, config)\n    .then(payload => {\n\n    return dispatch({\n        type: clientTypes.CLIENT_CREATE,\n        payload,\n    });\n\n    })\n    .catch(err => console.log(err)); \n}"]},"metadata":{},"sourceType":"module"}