{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque-frontend/src/pages/clientes/clientes.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport TableCustom from '../../core/components/table/tableCustom';\nimport Filters from '../../core/components/filters/filters';\nimport { find } from '../../redux/client/client.actions';\n\nfunction Clientes({\n  findClients,\n  data,\n  dispatch\n}) {\n  const filters = [{\n    type: 'text',\n    name: 'name',\n    label: 'Nome',\n    validators: 'requerid',\n    value: null\n  }, {\n    type: 'date',\n    name: 'birthDate',\n    label: 'Data de Nascimento',\n    validators: 'requerid',\n    value: null\n  }, {\n    type: 'select',\n    name: 'gender',\n    label: 'Sexo',\n    validators: 'requerid',\n    value: null,\n    selects: [{\n      description: 'Masculino',\n      value: 'M'\n    }, {\n      description: 'Feminino',\n      value: 'F'\n    }]\n  }, {\n    type: 'text',\n    name: 'phone',\n    label: 'Telefone',\n    validators: 'requerid',\n    value: null,\n    format: '(00) 00000-0000'\n  }, {\n    type: 'text',\n    name: 'address',\n    label: 'Endereço',\n    validators: 'requerid',\n    value: null\n  }];\n  useEffect(() => {\n    findClients();\n  }, [findClients]);\n\n  const handleSubmit = filtersSubmit => {\n    console.log(filtersSubmit);\n    data = filtersSubmit.map(filter => {\n      if (filter.value) {\n        console.log(\"Entrou no filter\");\n        console.log(\"Data:\", data.filter(d => d[filter.name] === filter.value));\n        data = data.filter(d => d[filter.name] === filter.value);\n        filter();\n      }\n\n      console.log(\"CLiente data2:\", data);\n      return null;\n    });\n  };\n\n  console.log(\"CLiente data:\", data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Clientes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Filters, {\n    filters: filters,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), data ? /*#__PURE__*/React.createElement(TableCustom, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }) : null);\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.client.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  filter: () => dispatch({\n    type: 'CLIENT_GET_ALL',\n    data: null\n  }),\n  findClients: () => dispatch(find())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Clientes);","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/pages/clientes/clientes.component.jsx"],"names":["React","useEffect","connect","TableCustom","Filters","find","Clientes","findClients","data","dispatch","filters","type","name","label","validators","value","selects","description","format","handleSubmit","filtersSubmit","console","log","map","filter","d","mapStateToProps","state","client","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\n\nimport TableCustom from '../../core/components/table/tableCustom';\nimport Filters from '../../core/components/filters/filters';\nimport { find } from '../../redux/client/client.actions';\n\nfunction Clientes({ findClients, data, dispatch }) {\n\n  const filters = [\n    { type: 'text', name: 'name', label: 'Nome', validators: 'requerid', value: null },\n    { type: 'date', name: 'birthDate', label: 'Data de Nascimento', validators: 'requerid', value: null },\n    { type: 'select', name: 'gender', label: 'Sexo', validators: 'requerid', value: null, selects: [{ description: 'Masculino', value: 'M' }, { description: 'Feminino', value: 'F' }] },\n    { type: 'text', name: 'phone', label: 'Telefone', validators: 'requerid', value: null, format: '(00) 00000-0000' },\n    { type: 'text', name: 'address', label: 'Endereço', validators: 'requerid', value: null }\n  ]\n\n  useEffect(() => {\n    findClients();\n  }, [findClients]);\n\n  const handleSubmit = (filtersSubmit) => {\n    console.log(filtersSubmit);\n\n    data = filtersSubmit.map(filter => {\n      if (filter.value) {\n        console.log(\"Entrou no filter\");\n        console.log(\"Data:\", data.filter(d => d[filter.name] === filter.value));\n        data = data.filter(d => d[filter.name] === filter.value)\n\n        filter();\n      }\n\n      console.log(\"CLiente data2:\", data)\n      return null;\n    })\n  }\n\n  console.log(\"CLiente data:\", data)\n\n  return (\n    <div className=\"Clientes\">\n      <div className=\"form\">\n        <Filters filters={filters} handleSubmit={handleSubmit} />\n      </div>\n      {data ?\n        (<TableCustom data={data} />)\n        : null}\n    </div >\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.client.data\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filter: () => dispatch({ type: 'CLIENT_GET_ALL', data: null }),\n  findClients: () => dispatch(find())\n});\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Clientes);\n"]},"metadata":{},"sourceType":"module"}