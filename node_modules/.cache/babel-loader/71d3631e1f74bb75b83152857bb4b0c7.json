{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque-frontend/src/core/components/filters/filters.js\";\nimport React, { useState } from \"react\";\nimport { Button, Card, CardContent, CardHeader } from '@material-ui/core';\nimport FormInput from '../../../core/components/form-input/form-input.component';\nimport FormDate from '../../../core/components/form-input/form-date.component';\nimport './filters.styles.scss';\nexport default function Filters({\n  filters\n}) {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      dispatch\n    } = this.props;\n    dispatch();\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // setValues({ ...filters, [name]: value })\n\n    setValues(prevFilters => prevFilters.map(filter => {\n      if (filter.name === name) return { ...filter,\n        value: value\n      };\n      return filter;\n    }));\n  };\n\n  const handleChangeDate = (date, filter) => {\n    console.log(\"date:\", date, \" filter:\", filter);\n    filter.value = date;\n    setValues({\n      filter,\n      value: '123'\n    });\n    console.log(\"filters:\", filters);\n  };\n\n  const [values, setValues] = useState(filters);\n  return /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Criar um Cliente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"clienteForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"name\",\n    value: filters.name,\n    onChange: handleChange,\n    label: \"Nome\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), filters.map(filter => {\n    switch (filter.type) {\n      case 'date':\n        return /*#__PURE__*/React.createElement(FormDate, {\n          key: filter.name,\n          name: filter.name,\n          value: values[filter.value],\n          onChange: date => handleChangeDate(date, filter),\n          label: filter.label,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 24\n          }\n        });\n\n      case 'select':\n        return /*#__PURE__*/React.createElement(FormInput, {\n          key: filter.name,\n          type: filter.type,\n          name: filter.name,\n          value: values[filter.value],\n          onChange: handleChange,\n          label: filter.label,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(FormInput, {\n          key: filter.name,\n          type: filter.type,\n          name: filter.name,\n          value: values[filter.value],\n          onChange: handleChange,\n          label: filter.label,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }\n        });\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Salvar\"))));\n}","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/core/components/filters/filters.js"],"names":["React","useState","Button","Card","CardContent","CardHeader","FormInput","FormDate","Filters","filters","handleSubmit","event","preventDefault","dispatch","props","handleChange","e","name","value","target","setValues","prevFilters","map","filter","handleChangeDate","date","console","log","values","type","label"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, Card, CardContent, CardHeader } from '@material-ui/core';\n\nimport FormInput from '../../../core/components/form-input/form-input.component';\nimport FormDate from '../../../core/components/form-input/form-date.component';\nimport './filters.styles.scss';\n\nexport default function Filters({ filters }) {\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const { dispatch } = this.props;\n\n    dispatch();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    // setValues({ ...filters, [name]: value })\n\n    setValues(prevFilters => (prevFilters.map((filter) => {\n      if (filter.name === name) return {...filter, value: value }\n      return filter;\n    })))\n  }\n\n  const handleChangeDate = ( date, filter) => {\n    console.log(\"date:\", date, \" filter:\", filter);\n    filter.value = date;\n    setValues({filter, value: '123' })\n    console.log(\"filters:\", filters);\n  }\n\n  const [values, setValues] = useState(filters);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader title=\"Criar um Cliente\" />\n\n      <CardContent>\n        <form className='clienteForm' onSubmit={handleSubmit}>\n\n          <FormInput\n            type='text'\n            name='name'\n            value={filters.name}\n            onChange={handleChange}\n            label='Nome'\n            required\n          />\n\n          {filters.map(filter => {\n            switch (filter.type) {\n              case 'date':\n                return <FormDate\n                  key={filter.name}\n                  name={filter.name}\n                  value={values[filter.value]}\n                  onChange={date => handleChangeDate(date, filter)}\n                  label={filter.label} />\n\n              case 'select':\n                return <FormInput\n                  key={filter.name}\n                  type={filter.type}\n                  name={filter.name}\n                  value={values[filter.value]}\n                  onChange={handleChange}\n                  label={filter.label}\n                  required />\n\n              default:\n                return <FormInput\n                  key={filter.name}\n                  type={filter.type}\n                  name={filter.name}\n                  value={values[filter.value]}\n                  onChange={handleChange}\n                  label={filter.label}\n                  required />\n            }\n          })\n          }\n\n          <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n            Salvar\n            </Button>\n\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}