{"ast":null,"code":"import { userTypes } from './user.types';\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userTypes.GETALL_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case userTypes.GETALL_SUCCESS:\n      return { ...state,\n        items: action.users\n      };\n\n    case userTypes.GETALL_FAILURE:\n      return { ...state,\n        error: action.error\n      };\n\n    case userTypes.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return { ...state,\n        items: state.items.map(user => user.id === action.id ? { ...user,\n          deleting: true\n        } : user)\n      };\n\n    case userTypes.DELETE_SUCCESS:\n      // remove deleted user from state\n      return { ...state,\n        items: state.items.filter(user => user.id !== action.id)\n      };\n\n    case userTypes.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n      return { ...state,\n        items: state.items.map(user => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const {\n              deleting,\n              ...userCopy\n            } = user; // return copy of user with 'deleteError:[error]' property\n\n            return { ...userCopy,\n              deleteError: action.error\n            };\n          }\n\n          return user;\n        })\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/redux/user/user.reducer.js"],"names":["userTypes","users","state","action","type","GETALL_REQUEST","loading","GETALL_SUCCESS","items","GETALL_FAILURE","error","DELETE_REQUEST","map","user","id","deleting","DELETE_SUCCESS","filter","DELETE_FAILURE","userCopy","deleteError"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,SAAS,CAACK,cAAf;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKN,SAAS,CAACO,cAAf;AACE,aAAO,EACL,GAAGL,KADE;AAELM,QAAAA,KAAK,EAAEL,MAAM,CAACF;AAFT,OAAP;;AAIF,SAAKD,SAAS,CAACS,cAAf;AACE,aAAO,EACL,GAAGP,KADE;AAELQ,QAAAA,KAAK,EAAEP,MAAM,CAACO;AAFT,OAAP;;AAIF,SAAKV,SAAS,CAACW,cAAf;AACE;AACA,aAAO,EACL,GAAGT,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAgBC,IAAI,IACzBA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAnB,GACI,EAAE,GAAGD,IAAL;AAAWE,UAAAA,QAAQ,EAAE;AAArB,SADJ,GAEIF,IAHC;AAFF,OAAP;;AAQF,SAAKb,SAAS,CAACgB,cAAf;AACE;AACA,aAAO,EACL,GAAGd,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYS,MAAZ,CAAmBJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAA9C;AAFF,OAAP;;AAIF,SAAKd,SAAS,CAACkB,cAAf;AACE;AACA,aAAO,EACL,GAAGhB,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAgBC,IAAI,IAAI;AAC7B,cAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAvB,EAA2B;AACzB;AACA,kBAAM;AAAEC,cAAAA,QAAF;AAAY,iBAAGI;AAAf,gBAA4BN,IAAlC,CAFyB,CAGzB;;AACA,mBAAO,EAAE,GAAGM,QAAL;AAAeC,cAAAA,WAAW,EAAEjB,MAAM,CAACO;AAAnC,aAAP;AACD;;AAED,iBAAOG,IAAP;AACD,SATM;AAFF,OAAP;;AAaF;AACE,aAAOX,KAAP;AAhDJ;AAkDD","sourcesContent":["import { userTypes } from './user.types';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userTypes.GETALL_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case userTypes.GETALL_SUCCESS:\n      return {\n        ...state,\n        items: action.users\n      };\n    case userTypes.GETALL_FAILURE:\n      return { \n        ...state,\n        error: action.error\n      };\n    case userTypes.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return {\n        ...state,\n        items: state.items.map(user =>\n          user.id === action.id\n            ? { ...user, deleting: true }\n            : user\n        )\n      };\n    case userTypes.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        ...state,\n        items: state.items.filter(user => user.id !== action.id)\n      };\n    case userTypes.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n      return {\n        ...state,\n        items: state.items.map(user => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const { deleting, ...userCopy } = user;\n            // return copy of user with 'deleteError:[error]' property\n            return { ...userCopy, deleteError: action.error };\n          }\n\n          return user;\n        })\n      };\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}