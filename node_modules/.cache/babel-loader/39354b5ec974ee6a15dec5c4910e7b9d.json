{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque-frontend/src/pages/clientes/clientes.component.jsx\";\nimport React, { useEffect, useCallback } from \"react\";\nimport { connect } from 'react-redux';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { find } from '../../redux/client/client.actions';\n\nfunction Clientes() {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n  const fetchProducts = useCallback(() => {\n    dispatch(find());\n  }, [dispatch]);\n  useEffect(() => {\n    console.log(\"Entrou no didmount, props:\");\n    fetchProducts();\n  }, [fetchProducts]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  console.log(\"data:\", data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Clientes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \" Nome \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \" Sexo \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \" Celular \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \" Endere\\xE7o \"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, data.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, row.email), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, row.birthDate), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, row.gender), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, row.phone), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, row.address)))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50],\n    colSpan: 3,\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'registros por pÃ¡gina'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n; // const mapStateToProps = (state) =>{\n//   return {\n//      data : state.client.data\n//   };\n//  }\n\nexport default connect(null, null)(Clientes);","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/pages/clientes/clientes.component.jsx"],"names":["React","useEffect","useCallback","connect","useSelector","useDispatch","Table","TableBody","TableCell","TableFooter","TableContainer","TableHead","TableRow","Paper","TablePagination","find","Clientes","dispatch","data","state","fetchProducts","console","log","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","map","row","id","name","email","birthDate","gender","phone","address","length","inputProps","native"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback  } from \"react\";\nimport { connect } from 'react-redux';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport { find } from '../../redux/client/client.actions';\n\nfunction Clientes() {\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n\n   const fetchProducts = useCallback(() => {\n    dispatch(find());\n  }, [dispatch]);\n\n  useEffect(() => {\n    console.log(\"Entrou no didmount, props:\");\n    fetchProducts();\n  }, [fetchProducts]);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\nconsole.log(\"data:\", data)\n  return (\n    <div className=\"Clientes\">\n      <div className=\"form\">\n\n      </div>\n\n      <TableContainer component={Paper}>\n        <Table className='table'>\n          <TableHead>\n            <TableRow>\n              <TableCell> Nome </TableCell>\n              <TableCell> Sexo </TableCell>\n              <TableCell> Celular </TableCell>\n              <TableCell> EndereÃ§o </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell>{row.email}</TableCell>\n                <TableCell>{row.birthDate}</TableCell>\n                <TableCell>{row.gender}</TableCell>\n                <TableCell>{row.phone}</TableCell>\n                <TableCell>{row.address}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                colSpan={3}\n                count={data.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'registros por pÃ¡gina' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div >\n  );\n};\n\n// const mapStateToProps = (state) =>{\n//   return {\n//      data : state.client.data\n//   };\n//  }\n\n\nexport default connect(\n  null,\n  null\n)(Clientes);\n"]},"metadata":{},"sourceType":"module"}