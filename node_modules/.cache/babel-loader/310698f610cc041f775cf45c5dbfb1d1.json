{"ast":null,"code":"import { userTypes } from './user.types';\nimport { userService } from '../../core/services/user.service';\nimport { alertActions } from '../alert/alert.actions';\nimport { history } from '../../core/helpers/history';\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userTypes.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userTypes.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userTypes.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userTypes.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push('/login');\n      dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userTypes.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userTypes.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userTypes.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userTypes.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userTypes.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userTypes.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userTypes.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userTypes.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userTypes.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/home/geia/git/cheque/src/redux/user/user.actions.js"],"names":["userTypes","userService","alertActions","history","userActions","login","logout","register","getAll","delete","_delete","username","password","dispatch","request","then","user","success","push","error","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userTypes } from './user.types';\nimport { userService } from '../../core/services/user.service';\nimport { alertActions } from '../alert/alert.actions';\nimport { history } from '../../core/helpers/history';\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userTypes.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userTypes.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userTypes.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userTypes.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/login');\n                    dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userTypes.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userTypes.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userTypes.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userTypes.GETALL_REQUEST } }\n    function success(users) { return { type: userTypes.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userTypes.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userTypes.DELETE_REQUEST, id } }\n    function success(id) { return { type: userTypes.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userTypes.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}