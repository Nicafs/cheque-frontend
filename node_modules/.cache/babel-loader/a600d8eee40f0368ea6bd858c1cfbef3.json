{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque-frontend/src/pages/bancos/bancos.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Container, Grid } from '@material-ui/core';\nimport TableCustom from '../../core/components/table/tableCustom';\nimport Filters from '../../core/components/filters/filters';\nimport { find, filter } from '../../redux/banco/banco.actions';\nimport MaterialTable from 'material-table';\n\nfunction Bancos({\n  findBancos,\n  data,\n  filteredData,\n  filterSubmit\n}) {\n  const filters = [{\n    type: 'text',\n    name: 'codigo',\n    label: 'Codigo',\n    validators: '',\n    value: null\n  }, {\n    type: 'text',\n    name: 'descricao',\n    label: 'Descricao',\n    validators: '',\n    value: null\n  }];\n  const columns = [];\n  useEffect(() => {\n    findBancos();\n  }, [findBancos]);\n\n  const handleSubmit = filtersSubmit => {\n    filteredData = data;\n    filtersSubmit.map(filter => {\n      if (filter.value) {\n        filteredData = filteredData.filter(d => {\n          if (filter.type === 'text') return d[filter.name].includes(filter.value);\n          return d[filter.name] === filter.value;\n        });\n      }\n\n      return filteredData;\n    });\n    filterSubmit(filteredData);\n  };\n\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"Bancos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Filters, {\n    filters: filters,\n    handleSubmit: handleSubmit,\n    linkTo: \"/bancos/crud\",\n    linkPrev: \"/\",\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.bancos.data,\n    filteredData: state.bancos.filteredData\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  filterSubmit: data => dispatch(filter(data)),\n  findBancos: () => dispatch(find())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bancos);","map":{"version":3,"sources":["/home/geia/git/cheque-frontend/src/pages/bancos/bancos.component.jsx"],"names":["React","useEffect","connect","Container","Grid","TableCustom","Filters","find","filter","MaterialTable","Bancos","findBancos","data","filteredData","filterSubmit","filters","type","name","label","validators","value","columns","handleSubmit","filtersSubmit","map","d","includes","state","setState","useState","title","field","lookup","surname","birthYear","birthCity","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","mapStateToProps","bancos","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\n\nimport {Container, Grid} from '@material-ui/core';\n\nimport TableCustom from '../../core/components/table/tableCustom';\nimport Filters from '../../core/components/filters/filters';\nimport { find, filter } from '../../redux/banco/banco.actions';\n\nimport MaterialTable from 'material-table';\nfunction Bancos({ findBancos, data, filteredData, filterSubmit }) {\n\n  const filters = [\n    { type: 'text', name: 'codigo', label: 'Codigo', validators: '', value: null },\n    { type: 'text', name: 'descricao', label: 'Descricao', validators: '', value: null }\n  ]\n\n  const columns = [\n      \n  ]\n\n  useEffect(() => {\n    findBancos();\n  }, [findBancos]);\n\n  const handleSubmit = (filtersSubmit) => {\n    filteredData = data;\n    filtersSubmit.map(filter => {\n      if (filter.value) {\n        filteredData = filteredData.filter(d =>  {\n          if(filter.type === 'text') return d[filter.name].includes(filter.value);\n          return d[filter.name] === filter.value;\n        })\n      }\n      return filteredData;\n    })\n\n    filterSubmit(filteredData);\n  }\n\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Surname', field: 'surname' },\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      },\n    ],\n    data: [\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n      {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34,\n      },\n    ],\n  });\n\n  return (\n    <Container className=\"Bancos\">\n      <Grid item md={12}>\n        <Filters filters={filters} handleSubmit={handleSubmit} linkTo='/bancos/crud' linkPrev='/' className=\"form\" />\n      </Grid>\n\n      <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n    </Container >\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.bancos.data,\n    filteredData: state.bancos.filteredData\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSubmit: (data) => dispatch(filter(data)),\n  findBancos: () => dispatch(find())\n});\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Bancos);\n"]},"metadata":{},"sourceType":"module"}