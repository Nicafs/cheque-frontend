{"ast":null,"code":"import { clientTypes } from './client.types';\nimport clients from './client.reducer';\nimport api from './axios';\nconst url = '/clients';\nexport const findById = id => dispatch => {\n  api.get(`/clients/` & {\n    id\n  }).then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_GET,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const find = () => dispatch => {\n  api.get('/clients').then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_GET_ALL,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const update = (formData, token) => dispatch => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  api.put('/clients', formData, config).then(payload => {\n    return dispatch({\n      type: clientTypes.CLIENT_UPDATE,\n      payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const create = formData => dispatch => {\n  return api.post(url, formData).then(payload => {\n    //caso tudo ocorra bem, o reducer abaixo vai ser acionado\n    dispatch({\n      type: clientTypes.CLIENT_CREATE,\n      payload\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/geia/git/cheque/src/redux/client/client.effects.js"],"names":["clientTypes","clients","api","url","findById","id","dispatch","get","then","payload","type","CLIENT_GET","catch","err","console","log","find","CLIENT_GET_ALL","update","formData","token","config","headers","put","CLIENT_UPDATE","create","post","CLIENT_CREATE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,OAAOC,GAAP,MAAgB,SAAhB;AAEA,MAAMC,GAAG,GAAG,UAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AACtCJ,EAAAA,GAAG,CAACK,GAAJ,CAAS,WAAD,GAAc;AAAEF,IAAAA;AAAF,GAAtB,EACKG,IADL,CACUC,OAAO,IAAI;AAEb,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAEV,WAAW,CAACW,UADN;AAEZF,MAAAA;AAFY,KAAD,CAAf;AAKH,GARL,EASKG,KATL,CASWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATlB;AAUH,CAXM;AAaP,OAAO,MAAMG,IAAI,GAAG,MAAMV,QAAQ,IAAI;AAClCJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,UAAR,EACKC,IADL,CACUC,OAAO,IAAI;AAEb,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAEV,WAAW,CAACiB,cADN;AAEZR,MAAAA;AAFY,KAAD,CAAf;AAKH,GARL,EASKG,KATL,CASWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATlB;AAUH,CAXM;AAaP,OAAO,MAAMK,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqBd,QAAQ,IAAI;AACnD,QAAMe,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,uBAAiBF;AADZ;AADE,GAAf;AAMAlB,EAAAA,GAAG,CAACqB,GAAJ,CAAQ,UAAR,EAAoBJ,QAApB,EAA8BE,MAA9B,EACKb,IADL,CACUC,OAAO,IAAI;AAEb,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAEV,WAAW,CAACwB,aADN;AAEZf,MAAAA;AAFY,KAAD,CAAf;AAKH,GARL,EASKG,KATL,CASWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATlB;AAUH,CAjBM;AAmBP,OAAO,MAAMY,MAAM,GAAIN,QAAD,IAAcb,QAAQ,IAAI;AAE5C,SAAOJ,GAAG,CAACwB,IAAJ,CAASvB,GAAT,EAAcgB,QAAd,EACFX,IADE,CACGC,OAAO,IAAI;AACb;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV,WAAW,CAAC2B,aADb;AAELlB,MAAAA;AAFK,KAAD,CAAR;AAIH,GAPE,EAQFG,KARE,CAQIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARX,CAAP;AASH,CAXM","sourcesContent":["import { clientTypes } from './client.types';\nimport clients from './client.reducer';\n\nimport api from './axios';\n\nconst url = '/clients';\n\nexport const findById = id => dispatch => {\n    api.get(`/clients/` & { id })\n        .then(payload => {\n\n            return dispatch({\n                type: clientTypes.CLIENT_GET,\n                payload,\n            });\n\n        })\n        .catch(err => console.log(err));\n}\n\nexport const find = () => dispatch => {\n    api.get('/clients')\n        .then(payload => {\n\n            return dispatch({\n                type: clientTypes.CLIENT_GET_ALL,\n                payload,\n            });\n\n        })\n        .catch(err => console.log(err));\n}\n\nexport const update = (formData, token) => dispatch => {\n    const config = {\n        headers: {\n            'Authorization': token,\n        }\n    };\n\n    api.put('/clients', formData, config)\n        .then(payload => {\n\n            return dispatch({\n                type: clientTypes.CLIENT_UPDATE,\n                payload,\n            });\n\n        })\n        .catch(err => console.log(err));\n}\n\nexport const create = (formData) => dispatch => {\n\n    return api.post(url, formData)\n        .then(payload => {\n            //caso tudo ocorra bem, o reducer abaixo vai ser acionado\n            dispatch({\n                type: clientTypes.CLIENT_CREATE,\n                payload,\n            })\n        })\n        .catch(err => console.log(err));\n}"]},"metadata":{},"sourceType":"module"}