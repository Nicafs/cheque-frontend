{"ast":null,"code":"var _jsxFileName = \"/home/geia/git/cheque/src/pages/clientes/crud/cliente-crud.component.jsx\";\nimport React from \"react\";\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { create } from '../../../redux/client/client.effects';\nimport FormInput from '../../../core/components/form-input/form-input.component';\nimport FormDate from '../../../core/components/form-input/form-date.component';\nimport './cliente-crud.styles.scss';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  fill: {\n    flexBasis: '100%'\n  }\n});\n\nclass CrudCliente extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        name,\n        email,\n        birthDate,\n        gender,\n        cpf,\n        phone,\n        address\n      } = event.target;\n      const {\n        user\n      } = this.props;\n      const formData = {\n        name: name.value,\n        email: email.value,\n        birthDate: birthDate.value,\n        gender: gender.value,\n        cpf: cpf.value,\n        phone: phone.value,\n        address: address.value\n      };\n      console.log(\"Vai chamar o create - formData:\", formData, \" user:\", user);\n      create(formData, user === null || user === void 0 ? void 0 : user.token);\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeDate = date => {\n      this.setState({\n        birthDate: date\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      birthDate: new Date(),\n      gender: '',\n      cpf: '',\n      phone: '',\n      address: ''\n    };\n  }\n\n  componentDidMount() {// this.getClient();\n  }\n\n  getClient() {\n    this.getClient = api.findById('api').then(response => response.data).then(data => {\n      this.setState(...data);\n    });\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      birthDate,\n      gender,\n      phone,\n      address,\n      cpf\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      title: \"Criar um Cliente\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"clienteForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChange,\n      label: \"Nome\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"E-mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormDate, {\n      name: \"birthDate\",\n      value: birthDate,\n      onChange: this.handleChangeDate,\n      label: \"Data de Nascimento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"gender\",\n      value: gender,\n      onChange: this.handleChange,\n      label: \"G\\xEAnero\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"cpf\",\n      value: cpf,\n      onChange: this.handleChange,\n      label: \"CPF\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"phone\",\n      value: phone,\n      onChange: this.handleChange,\n      label: \"Telefone\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"address\",\n      value: address,\n      onChange: this.handleChange,\n      label: \"Endere\\xE7o\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Salvar\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.data\n});\n\nexport default compose(withStyles(styles), connect(mapStateToProps, {\n  create\n}))(CrudCliente);","map":{"version":3,"sources":["/home/geia/git/cheque/src/pages/clientes/crud/cliente-crud.component.jsx"],"names":["React","compose","connect","Button","Card","CardContent","CardHeader","withStyles","create","FormInput","FormDate","styles","theme","root","display","flexWrap","justifyContent","fill","flexBasis","CrudCliente","Component","constructor","handleSubmit","event","preventDefault","name","email","birthDate","gender","cpf","phone","address","target","user","props","formData","value","console","log","token","handleChange","setState","handleChangeDate","date","state","Date","componentDidMount","getClient","api","findById","then","response","data","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Button, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { create } from '../../../redux/client/client.effects';\n\nimport FormInput from '../../../core/components/form-input/form-input.component';\nimport FormDate  from '../../../core/components/form-input/form-date.component';\nimport './cliente-crud.styles.scss';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  fill: {\n    flexBasis: '100%',\n  },\n});\n\nclass CrudCliente extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      birthDate: new Date(),\n      gender: '',\n      cpf: '',\n      phone: '',\n      address: ''\n    }\n  }\n\n  componentDidMount() {\n    // this.getClient();\n  }\n\n  getClient() {\n      this.getClient = api.findById('api')\n          .then(response => response.data)\n          .then(data => {\n\n              this.setState( ...data);\n          });\n  }\n\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { name, email, birthDate, gender, cpf, phone, address } = event.target;\n    const { user } = this.props;\n    const formData = {\n      name: name.value,\n      email: email.value,\n      birthDate: birthDate.value,\n      gender: gender.value,\n      cpf: cpf.value,\n      phone: phone.value,\n      address: address.value,\n    }\n    console.log(\"Vai chamar o create - formData:\", formData, \" user:\", user);\n\n    create(formData, user?.token);\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleChangeDate = (date) => {\n    this.setState({ birthDate: date });\n  };\n\n  render() {\n    const { name, email, birthDate, gender, phone, address, cpf } = this.state;\n\n    return (\n      <Card variant=\"outlined\">\n        <CardHeader title=\"Criar um Cliente\"/>\n\n        <CardContent>\n          <form className='clienteForm' onSubmit={this.handleSubmit}>\n\n            <FormInput\n              type='text'\n              name='name'\n              value={name}\n              onChange={this.handleChange}\n              label='Nome'\n              required\n            />\n\n            <FormInput\n              type='email'\n              name='email'\n              value={email}\n              onChange={this.handleChange}\n              label='E-mail'\n            />\n\n            <FormDate\n              name='birthDate'\n              value={birthDate}\n              onChange={this.handleChangeDate}\n              label='Data de Nascimento' />\n\n            <FormInput\n              type='text'\n              name='gender'\n              value={gender}\n              onChange={this.handleChange}\n              label='Gênero'\n              required\n            />\n\n            <FormInput\n              type='text'\n              name='cpf'\n              value={cpf}\n              onChange={this.handleChange}\n              label='CPF'\n              required\n            />\n\n            <FormInput\n              type='text'\n              name='phone'\n              value={phone}\n              onChange={this.handleChange}\n              label='Telefone'\n              required\n            />\n\n            <FormInput\n              type='text'\n              name='address'\n              value={address}\n              onChange={this.handleChange}\n              label='Endereço'\n              required\n            />\n\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n              Salvar\n            </Button>\n\n          </form>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.data,\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { create}),\n)(CrudCliente);"]},"metadata":{},"sourceType":"module"}